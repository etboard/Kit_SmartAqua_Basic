# ******************************************************************************************************
# FileName     : SmartAqua_Basic
# Description  : 스마트 아쿠아 코딩 키트 (기본)
# Author       : 김우중
# CopyRight    : (주)한국공학기술연구원(www.ketri.re.kr)
# Created Date : 2024.01.10
# Reference    : 해당 소스 코드는 360도 서보 모터를 사용하는 것을 전제 하에 작성하였습니다.
# Modified     : 2024.05.07 : PEJ : 함수 생성, 코드 정리, 주석 추가
# Modified     : 2024.05.10 : PEJ : 360도 서보모터 안내문 추가, 함수 수정
# ******************************************************************************************************


# import
import time                                        # 시간 관련 모듈
from machine import ADC, Pin, time_pulse_us        # 핀 및 시간 관련 모듈
from ETboard.lib.pin_define import *               # ETboard 핀 관련 모듈
from ETboard.lib.OLED_U8G2 import *                # ETboard OLED 관련 모듈
from ds18x20 import DS18X20                        # 수온 감지 센서 관련 모듈
from onewire import OneWire                        # 수온 감지 센서 관련 모듈
from ETboard.lib.servo import Servo                # 서보 모터 제어 라이브러리


#-------------------------------------------------------------------------------------------------------
# ETBoard 핀 번호 설정
#-------------------------------------------------------------------------------------------------------
oled = oled_u8g2()

ds_pin = Pin(A6)                                   # 수온 감지 센서의 핀을 A3로 선언
ds_sensor = DS18X20(OneWire(ds_pin))               # 수온 감지 센서 초기화

tds_pin = ADC(Pin(A7))                             # 수질 감지 센서의 핀을 A4로 선언

waterlevel_pin = Pin(D5, Pin.IN, Pin.PULL_UP)      # 수위 감지 센서의 핀을 D5로 선언

servo_pin = Servo(Pin(D8))                         # 서보모터의 핀을 D8로 선언

mode_button = Pin(D6)                              # 모드 변경 버튼
servo_button = Pin(D9)                             # 서보모터 작동 버튼

#-------------------------------------------------------------------------------------------------------
# 전역 변수 선언
#-------------------------------------------------------------------------------------------------------
roms = 0                                           # 수온 센서의 주소 값을 0으로 초기화

mode = "m"                                         # 모드를 "m(anual)"으로 초기화
step = "step 1"                                    # step 단계를 1로 초기화
temp = 0                                           # 온도를 0으로 초기화
tds = 0                                            # 수질을 0으로 초기화
water_level = "shortage"                           # 수위를 "shortage"로 초기화
motor_state = "Off"                                # 모터 상태를 "Off"로 초기화

timer = 10                                         # 먹이 공급 타이머의 시간을 10초(임의 값)로 초기화
last_feeding_time = 0                              # 마지막 먹이 공급 시간을 0으로 초기화
now = 0                                            # 현재 시간을 0으로 초기화


#=======================================================================================================
# setup
#=======================================================================================================
def setup():
    global roms

    mode_button.init(Pin.IN)                       # 모드 설정 버튼을 입력 모드로 설정
    servo_button.init(Pin.IN)                      # 서보모터 동작 버튼을 입력 모드로 설정
    tds_pin.atten(ADC.ATTN_11DB)                   # TDS 센서를 입력 모드로 설정

    roms = ds_sensor.scan()                        # 수온 감지 센서를 스캔하여 변수에 저장
    print("Found DS devices: ", roms)              # 스캔한 수온 감지 센서를 출력
    servo_pin.write_angle(90)                      # 서보모터 작동 감지


#=======================================================================================================
# main loop
#=======================================================================================================
def loop():
    #---------------------------------------------------------------------------------------------------
    # 모드 감지
    #---------------------------------------------------------------------------------------------------
    mode_set()                                     # 모드 설정 함수를 호출

    #---------------------------------------------------------------------------------------------------
    # 온도 감지
    #---------------------------------------------------------------------------------------------------
    temp_get()                                     # 수온 감지 센서 값을 구하는 함수를 호출

    #---------------------------------------------------------------------------------------------------
    # TDS(수질) 감지
    #---------------------------------------------------------------------------------------------------
    tds_get()                                      # 수질 감지 센서 값을 구하는 함수를 호출

    #---------------------------------------------------------------------------------------------------
    # 수위 감지
    #---------------------------------------------------------------------------------------------------
    waterlevel_get()                               # 수위 감지 센서 값을 구하는 함수를 호출

    #---------------------------------------------------------------------------------------------------
    # 서보 모터: 먹이 공급
    #--------------------------------------------------------------------------------------------------
    food_supply()                                  # 먹이를 공급하는 함수를 호출

    #---------------------------------------------------------------------------------------------------
    # OLED 텍스트 표시
    #---------------------------------------------------------------------------------------------------
    oled_print()                                   # OLED에 텍스트를 출력하는 함수 호출


#=======================================================================================================
# mode_set
#=======================================================================================================
def mode_set():
    global mode, step, last_feeding_time, now      # 전역 변수 호출

    step = "step 1"                                # step 단계 저장
    oled_print()                                   # OLED 출력 함수 호출

    now = int(round(time.time()))                  # 현재 시간 저장
    if mode_button.value() != LOW:
        return

    if mode_button.value() == LOW:                 # 모드 변경 버튼이 눌린 상태라면
        while True:                                # 반복문 시작
            if mode_button.value() == HIGH:        # 모드 변경 버튼이 눌리지 않은 상태라면
                break                              # 반복문 종료

    if mode == "m":                                # 모드가 "m(anual)"라면
        mode = "a"                                 # 모드를 "a(utomatic)"로 변경
        last_feeding_time = now                    # 마지막 먹이 공급 시간에 현재 시간 저장
        return

    mode = "m"                                     # 모드를 "m(anual)"으로 변경


#=======================================================================================================
# temp_get
#=======================================================================================================
def temp_get():
    global step, temp                              # 전역 변수 호출

    step = "step 2"                                # step 단계 저장
    oled_print()                                   # OLED 출력 함수 호출

    if len(roms) <= 0:                             # 수온 감지 센서가 없으면
        temp = -1                                  # 온도를 -1로 저장
        print("수온 감지 센서 오류")
        return

    ds_sensor.convert_temp()                       # 온도 변환
    time.sleep_ms(5)                               # 5ms 대기
    temp = ds_sensor.read_temp(roms[0])            # 수온 감지 센서의 온도를 저장


#=======================================================================================================
# tds_get
#=======================================================================================================
def tds_get():
    global step, tds                               # 전역 변수 호출

    step = "step 3"                                # step 단계 저장
    oled_print()                                   # OLED 출력 함수 호출


    tds_value = tds_pin.read()                     # 수질 감지 센서의 값을 변수에 저장
    if tds_value <= 0:                             # 수질 감지 센서의 값이 0보다 작거나 같다면
        tds = -1                                   # 변수 tds에 -1 저장
        print("수질 감지 센서 오류")
        return                                     # 함수 종료

    voltage = tds_value * 5 / 4096.0
    compensationVolatge = voltage * (1.0 + 0.02 * (temp - 25.0))
    tds = (133.42/compensationVolatge * compensationVolatge * compensationVolatge - 255.86 * \
              compensationVolatge * compensationVolatge + 857.39 * compensationVolatge) * 0.5


#=======================================================================================================
# waterlevel_get
#=======================================================================================================
def waterlevel_get():
    global step, water_level                       # 전역 변수 호출

    step = "step 4"                                # step 단계 저장
    oled_print()                                   # OLED 출력 함수 호출

    water_level = "shortage"
    if waterlevel_pin.value() == HIGH:             # 수위 감지 센서의 값이 LOW라면
        water_level = "enough"                     # "enough" 저장


#=======================================================================================================
# food_supply
#=======================================================================================================
def food_supply():
    global mode, step, \
           last_feeding_time, now, timer           # 전역 변수 호출

    step = "step 5"                                # step 단계 저장
    oled_print()                                   # OLED 출력 함수 호출

    if mode != "a":                                # mode가 "a(utomatic)"가 아니라면
        if servo_button.value() == LOW:            # 서보 모터 버튼이 눌렸다면
            servo_control()                        # 먹이 공급 함수 호출
        return

    if now - last_feeding_time >= timer:           # 현재 시간 - 마지막 먹이 공급 시간 >= 타이머 시간
        servo_control()                            # 먹이 공급 함수 호출
        last_feeding_time = now                    # 마지막 먹이 공급 시간에 현재 시간 저장


#=======================================================================================================
# servo_work
#=======================================================================================================
def servo_control():
    global motor_state                             # 전역 변수 호출

    motor_state = "On"                             # 모터 상태 변경
    oled_print()                                   # OLED 출력
    motor_on()                                     # motor_on 함수 호출    

    motor_state = "Off"                            # 모터 상태 변경
    oled_print()                                   # OLED 출력
    motor_off()                                    # motor_off 함수 호출


#=======================================================================================================
# motor_on
#=======================================================================================================
def motor_on():                   
    servo_pin.write_angle(180)                     # 360도 서보 모터 반시계 방향 최대 속도 회전
    time.sleep(1)                                  # 1초간 대기


#=======================================================================================================
# motor_off
#=======================================================================================================
def motor_off():
    servo_pin.write_angle(90)                      # 360도 서보 모터 중지


#=======================================================================================================
# oled_print
#=======================================================================================================
def oled_print():
    global mode, step, temp, tds, water_level, motor_state, \
           last_feeding_time, now                  # 전역 변수 호출

    mode_line = "Mode: manual"
    timer_line = ""
    if mode == "a":                                # 모드가 "a(utomatic)"라면
        mode_line = "Mode: automatic"
        cal_time = now - last_feeding_time
        timer_line = "Timer: " + str(timer - cal_time) + "sec"

    temp_line = "Temp: %d" %(temp) + "C "
    tds_line = "TDS: %d" %(tds) + "ppm"
    water_level_line = "Water: " + water_level
    motor_line = "Motor: " + motor_state

    oled.clear()                                   # OLED 초기화

    oled.setLine(1, "* Aqua *")                    # OLED 첫 번째 줄 : 시스템 이름
    oled.setLine(2, mode_line)                     # OLED 두 번째 줄 : 모드(자동/수동)
    oled.setLine(3, step)                          # OLED 세 번째 줄 : step 단계
    oled.setLine(4, temp_line)                     # OLED 세 번째 줄 : 온도
    oled.setLine(5, tds_line)                      # OLED 네 번째 줄 : 수질
    oled.setLine(6, water_level_line)              # OLED 다섯 번째 줄 : 수위
    oled.setLine(7, motor_line)                    # OLED 여섯 번째 줄: 모터 상태
    oled.setLine(8, timer_line)                    # OLED 일곱 번째 줄 : 타이머(자동 모드일 때만 표시)

    oled.display()


# start point
if __name__ == "__main__":
    setup()
    while True:
        loop()


#=======================================================================================================
#
#  (주)한국공학기술연구원 http://et.ketri.re.kr
#
#======================================================================================================= 
